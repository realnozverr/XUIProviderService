// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VpnProviderWorker.Persistence;

#nullable disable

namespace VpnProviderWorker.Persistence.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250909094725_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.8");

            modelBuilder.Entity("VpnProviderWorker.Persistence.Inbox.InboxEvent", b =>
                {
                    b.Property<Guid>("EventId")
                        .HasColumnType("TEXT")
                        .HasColumnName("event_id");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("content");

                    b.Property<DateTime>("OccurredOnUtc")
                        .HasColumnType("TEXT")
                        .HasColumnName("occurred_on_utc");

                    b.Property<DateTime?>("ProcessedOnUtc")
                        .HasColumnType("TEXT")
                        .HasColumnName("processed_on_utc");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("type");

                    b.HasKey("EventId");

                    b.HasIndex(new[] { "OccurredOnUtc", "ProcessedOnUtc", "EventId", "Type" }, "IX_inbox_messages_unprocessed")
                        .HasFilter("processed_on_utc IS NULL");

                    b.ToTable("inbox", (string)null);
                });

            modelBuilder.Entity("VpnProviderWorker.Persistence.Outbox.OutboxEvent", b =>
                {
                    b.Property<Guid>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("event_id");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("content");

                    b.Property<string>("Error")
                        .HasColumnType("TEXT")
                        .HasColumnName("error");

                    b.Property<DateTime>("OccurredOnUtc")
                        .HasColumnType("TEXT")
                        .HasColumnName("occurred_on_utc");

                    b.Property<DateTime?>("ProcessedOnUtc")
                        .HasColumnType("TEXT")
                        .HasColumnName("processed_on_utc");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("type");

                    b.HasKey("EventId");

                    b.HasIndex(new[] { "OccurredOnUtc" }, "IX_outbox_messages_unprocessed")
                        .HasFilter("processed_on_utc IS NULL");

                    b.ToTable("outbox", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
